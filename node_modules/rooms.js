exports.Room = function(roomSize) {
	this.playersList = [];
	this.colors = {};
	this.roomSize = roomSize;
	this.colorsList = ['#6BCBCA', '#FF6766', 'black', '#96CE68'];
	this.availableColors = ['#6BCBCA', '#FF6766'];
	this.nbBlackBoxes = 0;
	this.currentColor = Math.floor(Math.random() * (roomSize-1));
	this.boxes = [];
	this.ratio = 1.0;
	this.time = 0.0;
	this.powerList = [];
	this.availablePowers = [];
	this.timesPower = [];
	this.stopped = false;
	this.launched = false;
	this.ended = false;

	this.addPlayer = function(player, infos) {
		player.setInfos(infos);
		var chosenColor = Math.floor(Math.random() * this.availableColors.length);
		player.setColor(this.availableColors[chosenColor]);
		delete this.availableColors[chosenColor];
		this.availableColors = this.availableColors.filter( function(val){return val !== undefined} );
		this.playersList.push(player);
	}

	this.discardPlayer = function(player) {
		this.availableColors.push(player.getColor());
		delete this.playersList[this.playersList.indexOf(player)];
		this.playersList = this.playersList.filter( function(val){return val !== undefined} );
	}

	this.getPlayersNumber = function() {
		return this.playersList.length;
	}

	this.getPlayer = function(socket) {
		for(player in this.playersList) {
			if(socket == this.playersList[player].socket) {
				return this.playersList[player];
			}
		}
	}

	this.isFull = function() {
		if(this.getPlayersNumber() == roomSize) return true;
		return false;
	}

	this.isReady = function () {
		var ready = true;
		for(player in this.playersList) {
			if(this.playersList[player].getReady() == false) ready = false;
		}
		return ready;
	}

	this.stop = function() {
		this.stopped = true;
	}

	this.isStopped = function() {
		return this.stopped;
	}

	this.launch = function() {
		this.launched = true;
	}

	this.isLaunched = function() {
		return this.launched;
	}

	this.end = function() {
		this.ended = true;
	}

	this.isEnded = function() {
		return this.ended;
	}

	this.getSockets = function() {
		var sockets = [];
		for(player in this.playersList) {
			sockets.push(this.playersList[player].socket);
		}
		return sockets;
	}

	this.getPlayers = function() {
		return this.playersList;
	}

	this.getCurrentColor = function() {
		return this.colorsList[this.currentColor];
	}

	this.nextColor = function() {
		if(this.currentColor == (roomSize-1)) {
			this.currentColor = 0
		} else {
			this.currentColor = this.currentColor+1;
		}
	}

	this.nextBox = function() {
		return this.boxes.length;
	}

	this.addBox = function(box) {
		this.boxes.push(box);
	}

	this.getBox = function(id) {
		return this.boxes[id];
	}

	this.getTime = function() {
		return this.time;
	}

	this.setTime = function(time) {
		this.time = time;
	}

	this.getRatio = function() {
		return this.ratio;
	}

	this.nextRatio = function() {
		if(this.nextBox() < 5) {
			this.ratio = this.ratio/1.1;
		} else if(this.nextBox() < 10) {
			this.ratio = this.ratio/1.09;
		} else if(this.nextBox() < 15) {
			this.ratio = this.ratio/1.08;
		} else if(this.nextBox() < 40) {
			this.ratio = this.ratio/1.07;
		} else if(this.nextBox() < 60) {
			this.ratio = 0.1;
		} else {
			this.ratio = 0.05;
		}
	}

	this.getNbBlack = function() {
		return this.nbBlackBoxes;
	}

	this.incrBlack = function() {
		this.nbBlackBoxes = this.nbBlackBoxes+1;
	}

	this.getMalus = function() {
		return this.colorsList[this.getPlayersNumber()];
	}

	this.getBonus = function() {
		return this.colorsList[this.getPlayersNumber()+1];
	}

	this.setPowers = function(powers) {
		this.availablePowers = powers;
	}

	this.getPowers = function() {
		return this.availablePowers;
	}

	this.getNbPowers = function() {
		return this.availablePowers.length;
	}

	this.getOnePower = function () {
		if(this.availablePowers.length > 0) {
			var pow = this.availablePowers[0];
			delete this.availablePowers[0];
			this.availablePowers = this.availablePowers.filter( function(val){return val !== undefined} );
			return pow;
		} else {
			return undefined;
		}
	}

	this.setPowerList = function (powerList) {
		this.powerList = powerList;
	}

	this.getPowerList = function() {
		return this.powerList;
	}

	this.setTimesPower = function(timesPower) {
		this.timesPower = timesPower;
	}

	this.getTimePower = function() {
		return this.timesPower[0];
	}

	this.changeTimePower = function() {
		delete this.timesPower[0];
		this.timesPower = this.timesPower.filter( function(val){return val !== undefined} );
	}

	this.roomRequest = function(type, data) {
		for(index in this.getSockets()) {
			this.getSockets()[index].emit(type, data);
		}
	}

	this.otherPlayersRequest = function(socket, type, data) {
		for(index in this.getSockets()) {
			if(socket != this.getSockets()[index]) this.getSockets()[index].emit(type, data);
		}
	}
}